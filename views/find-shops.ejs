<!DOCTYPE html>
<html lang="en">
<meta charset="UTF-8">
<title>Find shops</title>

<!-- CSS (load bootstrap from a CDN) -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"
      integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB"
      crossorigin="anonymous">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/all.css"
      integrity="sha384-lKuwvrZot6UHsBSfcMvOkWwlCMgc0TaWr+30HWe3a4ltaBwTZhyTEggF5tJv8tbt"
      crossorigin="anonymous">
<style>
    body {
        padding-top: 50px;
    }

    /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
    #map {
        height: 500px;
    }
</style>

<body>
<div class="container clearfix">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Find Shops<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/add">Add Shop</a>
                </li>
            </ul>
        </div>
    </nav>
    <div class="input-group mt-3 mb-2">
        <div class="input-group-prepend">
            <label class="input-group-text" for="radius-select">Lat: 6.819545</label>
            <label class="input-group-text" for="radius-select">Lon: 79.880083</label>
        </div>
        <select class="custom-select" id="radius-select">
            <option value="100">100m</option>
            <option value="200">200m</option>
            <option value="300">300m</option>
            <option value="400">400m</option>
            <option value="500">500m</option>
            <option value="600">600m</option>
            <option value="700">700m</option>
            <option value="800">800m</option>
            <option value="900">900m</option>
            <option selected value="1000">1km</option>
            <option value="2000">2km</option>
            <option value="3000">3km</option>
            <option value="4000">4km</option>
            <option value="5000">5km</option>
            <option value="10000">10km</option>
            <option value="20000">20km</option>
            <option value="30000">30km</option>
            <option value="40000">40km</option>
            <option value="50000">50km</option>
        </select>
        <div class="input-group-append">
            <button id="find-shops-button" class="btn btn-outline-secondary" type="button">Find shops</button>
        </div>
    </div>

    <div class="clearfix">
        <button id="next-page-button" class="btn btn-outline-secondary float-right" type="button" aria-hidden="true">
            <i class="fas fa-angle-right"></i>
        </button>
    </div>

    <ul id="shops" class="pl-0 mt-3 mb-3"></ul>

    <div id="floating-panel">
        <b>Destination: </b>
        <select id="destination-select"></select>
    </div>
    <div id="map" class="mt-2 mb-2"></div>

</div>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
        integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
        crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"
        integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T"
        crossorigin="anonymous"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDNUn07t9bpR7YNNUUGw-ZEFC1jdbQclbQ&callback=initMap"
        async defer></script>
<script>
    let map = undefined;
    let markers = [];
    let directionsService = undefined;
    let directionsDisplay = undefined;
    let nextPageToken = undefined;

    $('#next-page-button').prop('disabled', true);

    $('#find-shops-button').click(function () {
        let radius = $('#radius-select').val();
        $.ajax({
            url: '/api/retailers/nearby/sorted',
            type: "get",
            data: {
                latitude: '6.819545',
                longitude: '79.880083',
                distance: radius
            },
            success: function (response) {
                if (!response.error && response.retailers) {
                    nextPageToken = response.nextPageToken;
                    if (nextPageToken) {
                        $('#next-page-button').prop('disabled', false);
                    } else {
                        $('#next-page-button').prop('disabled', true);
                    }
                    $('.shop').remove();
                    $('.destination-item').remove();
                    markers.forEach(function (marker) {
                        marker.setMap(null);
                    });
                    markers = [];
                    addMainMarker(map);
                    response.retailers.forEach((shop) => {
                        addShopToList(shop);
                        addRetailerMarker(shop, map);
                        addShopToDirectionsDropdown(shop);
                    });
                }
            },
            error: function (xhr) {
                console.log('Error:', xhr);
            }
        });
    });

    function addShopToList(shop) {
        let li = $('<li class="shop list-group-item clearfix">\n' +
            '            <span class="shop-name text-success">' + shop.name + '</span>\n' +
            '            <span class="shop-google-id ml-2 float-right text-info">' + shop.id + '</span>\n' +
            '        </li>');

        $('#shops').append(li);
    }

    function addShopToDirectionsDropdown(shop) {
        let option = $('<option class="destination-item" value="' + shop.latitude + ',' + shop.longitude + '">' + shop.name +'</option>');

        $('#destination-select').append(option);
    }
    /**
     * Google Maps Javascript library will invoke this function
     */
    function initMap() {
        let center = {
            lat: 6.819545,
            lng: 79.880083
        };
        map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            zoom: 16
        });

        addMainMarker(map);

        directionsService = new google.maps.DirectionsService();
        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setMap(map);

        const onChangeHandler = function() {
            console.log('onchange');
            calculateAndDisplayRoute(directionsService, directionsDisplay);
        };
        document.getElementById('destination-select').addEventListener('change', onChangeHandler);
    }

    function addMainMarker(map) {
        let marker = new google.maps.Marker({
            position: {
                lat: 6.819545,
                lng: 79.880083
            },
            map: map,
            title: 'You',
            icon: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png'
        });
        markers.push(marker);
    }

    function addRetailerMarker(retailer, map) {
        let marker = new google.maps.Marker({
            position: new google.maps.LatLng(retailer.latitude, retailer.longitude),
            map: map,
            title: retailer.name
        });
        markers.push(marker);
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {

        directionsService.route({
            origin: new google.maps.LatLng(6.819545, 79.880083),
            destination: getLatLngFromString(document.getElementById('destination-select').value),
            travelMode: 'DRIVING'
        }, function(response, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(response);
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }

    function getLatLngFromString (latLngString) {
        let latLngArray = latLngString.split(',');
        return new google.maps.LatLng(latLngArray[0], latLngArray[1]);
    }
</script>
</body>

</html>